<?xml version="1.0" encoding="UTF-8"?>
<!-- Repository and Service layers -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:security="http://www.springframework.org/schema/security" xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-jms="http://www.springframework.org/schema/integration/jms"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/integration/jms http://www.springframework.org/schema/integration/jms/spring-integration-jms.xsd">

	<context:annotation-config />

	<context:component-scan base-package="com.neuralnoise" />
	
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
      <property name="prefix" value="/WEB-INF/pages/" />
      <property name="suffix" value=".jsp" />
   </bean>
   
   	<mvc:default-servlet-handler />

	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="objectMapper" ref="customObjectMapper" />
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	
	<bean id="customObjectMapper" class="com.neuralnoise.util.CustomObjectMapper" />

	<!-- Define the ActiveMQ connection factory -->
	<bean id="connectionFactory" class="org.apache.activemq.spring.ActiveMQConnectionFactory">
		<property name="brokerURL" value="tcp://localhost:61616" />
	</bean>
	
	<!-- Main reference: http://gordondickens.com/wordpress/2011/04/19/dont-use-jmstemplate-in-spring/ -->
	
	<!-- Pickup the @Gateway annotation -->
    <int:annotation-config />

	<!-- Define the channel (pipe) connecting the endpoints -->
	<int:channel id="requests" />
	<int:channel id="requestsJSON">
		<int:interceptors>
			<int:wire-tap channel="logRequestsJSON"/>
		</int:interceptors>
	</int:channel>
	
	<int:logging-channel-adapter id="logRequestsJSON" log-full-message="true" level="ERROR" />
	
	<!-- Configure the Gateway to Send on the channel -->
	<int:gateway id="requestsGateway" service-interface="com.neuralnoise.integration.RequestsGateway" default-request-channel="requests" />

	<bean id="queue.requests" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg value="COLLECTOR.REQUESTS" />
	</bean>

	<!-- Send message to JMS -->
	<int-jms:outbound-channel-adapter channel="requestsJSON" destination="queue.requests" />
	<int:object-to-json-transformer input-channel="requests" output-channel="requestsJSON" content-type="text/x-json"/>

	<int:channel id="answers">
		<int:interceptors>
			<int:wire-tap channel="logAnswers"/>
		</int:interceptors>
	</int:channel>
	<int:logging-channel-adapter id="logAnswers" log-full-message="true" level="ERROR" />

	<bean id="queue.answers" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg value="COLLECTOR.ANSWERS" />
	</bean>
	
	<int-jms:inbound-gateway request-channel="answers" request-destination="queue.answers" />

	<bean id="jsonObjectMapper" class="com.neuralnoise.util.CustomObjectMapper" factory-method="getMapper"/>

	<!-- The chain of processing -->
	<int:chain input-channel="answers">
		<int:json-to-object-transformer type="com.neuralnoise.integration.util.CAnswer" object-mapper="jsonObjectMapper" />
		<int:service-activator method="handle">
			<bean class="com.neuralnoise.integration.AnswerHandler" />
		</int:service-activator>
	</int:chain>

	<!-- enables scanning for @Transactional annotations -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
</beans>
